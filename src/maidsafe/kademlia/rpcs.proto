import "maidsafe/common/validation.proto";
import "maidsafe/kademlia/kademlia.proto";
import "maidsafe/transport/transport.proto";

package maidsafe.kademlia.protobuf;

// Internal message required by client Kademlia logic
message GeneralResponse {
  required bool result = 1;
};

message PingRequest {
  required bytes ping = 1;
  required Contact sender = 2;
};

message PingResponse {
  required bool result = 1;
  optional bytes echo = 2;
};

message FindValueRequest {
  required bytes key = 1;
  required Contact sender = 2;
};

message FindValueResponse {
  required bool result = 1;
  repeated Contact closest_nodes = 2;
  repeated bytes values = 3;
  repeated maidsafe.protobuf.SignedValue signed_values = 4;
  optional Contact alternative_value_holder = 5;
  optional bytes needs_cache_copy = 6;
};

message FindNodesRequest {
  required bytes key = 1;
  required Contact sender = 2;
};

message FindNodesResponse {
  required bool result = 1;
  repeated Contact closest_nodes = 2;
};

message StoreRequest {
  required bytes key = 1;
  optional bytes value = 2;
  optional maidsafe.protobuf.SignedValue signed_value = 3;
  required int32 ttl = 4;
  required bool publish = 5;
  optional maidsafe.protobuf.Signature request_signature = 6;
  required Contact sender = 7;
};

message StoreResponse {
  required bool result = 1;
  optional maidsafe.protobuf.Signature deletion_signature = 2;
};

message DeleteRequest {
  required bytes key = 1;
  required maidsafe.protobuf.SignedValue signed_value = 2;
  required maidsafe.protobuf.Signature request_signature = 3;
  required Contact sender = 4;
};

message DeleteResponse {
  required bool result = 1;
};

message UpdateRequest {
  required bytes key = 1;
  required maidsafe.protobuf.SignedValue new_signed_value = 2;
  required maidsafe.protobuf.SignedValue old_signed_value = 3;
  required int32 ttl = 4;
  required maidsafe.protobuf.Signature request_signature = 5;
  required Contact sender = 6;
};

message UpdateResponse {
  required bool result = 1;
};

message DownlistNotification {
  repeated bytes node_ids = 1;
  required Contact sender = 2;
};
